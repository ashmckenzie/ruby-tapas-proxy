upstream <%= config['app_name'] %>-unicorn {
  server unix:/tmp/unicorn.<%= config['app_name'] %>.sock fail_timeout=0;
}

server {
  listen 8080;
  passenger_enabled off;

  server_name  <%= config['server_name'] %>;
  root <%= config['root'] %>;
  try_files $uri/index.html $uri @<%= config['app_name'] %>-unicorn;

  location ~* ^/remote-download/(.*?)/(.*?)/(.*) {
    internal;

    resolver 8.8.8.8;

    set $download_scheme $1;
    set $download_host $2;
    set $download_uri $3;
    set $download_url $download_scheme://$download_host/$download_uri;

    # Important, set here!
    #
    # http://www.ruby-forum.com/topic/207951
    # http://serverfault.com/questions/423265/how-to-follow-http-redirects-inside-nginx
    #
    set $x_auth $upstream_http_x_auth;

    proxy_max_temp_file_size 0;
    proxy_pass_request_headers off;

    proxy_set_header Host $download_host;
    proxy_set_header Authorization $x_auth;

    proxy_pass $download_url;
  }

  location @<%= config['app_name'] %>-unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_buffering off;
    proxy_pass http://<%= config['app_name'] %>-unicorn;
  }

  access_log  /var/log/nginx/<%= config['app_name'] %>.access.log  combined;
  error_log  /var/log/nginx/<%= config['app_name'] %>.error.log;

  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    root   html;
  }

  # deny access to .git directories
  #
  location ~ /\.git {
    deny all;
  }
}
